// Typography helpers
.headerText {
    font-size: 2.2em;
    color: $grayDarker;
    line-height: 1em;
    letter-spacing: 0;
    margin: 0 0 36px 0;
    font-weight: 700;
    &.big {
        font-size: 3.2em;
    }

}
.subheadText {
  font-size: 1.3em;
  line-height: 1.2em;
  font-weight: 300;
  font-family: $sansFontFamily;
}
.smallReadingText {
  font-family: $sansFontFamily;
  line-height: $basePostLineHeight;
  font-size: $basePostFontSize;
  font-weight: $basePostFontWeight;
}
.postText {
    font-family: $serifFontFamily;
    font-size: $basePostFontSize;
    font-weight: $basePostFontWeight;
    line-height: $basePostLineHeight;   
}
.postTextMed {
  font-size: 1.1em;
}
.postTeaserText {
  font-size: 1.15em;
  line-height: 1.2em;
  font-family: $sansFontFamily;
  font-weight: 400; 
}

.readingText {
  font-family: $sansFontFamily;
  line-height: $basePostLineHeight;
  font-size: $basePostFontSize;
  font-weight: $basePostFontWeight;
}

.sansReadingText {
  font-size: 1.05em;
  line-height: 1.15em;
  font-family: $sansFontFamily;
}

.labelTextSmall {
  font-family: $sansFontFamily;
  line-height: 1.1em;
  font-size: 14px;
  font-weight: 400;
}

// Background sizing
@mixin background-size($size) {
  -webkit-background-size: $size;
     -moz-background-size: $size;
       -o-background-size: $size;
          background-size: $size;
}


// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
     -moz-user-select: $select;
      -ms-user-select: $select;
       -o-user-select: $select;
          user-select: $select;
}

// Resize anything
@mixin resizable($direction) {
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}
@mixin transform($property) {
  -webkit-transform: $property;
  -moz-transform: $property;
  -ms-transform: $property;
  -o-transform: $property;
  transform: $property;
}
// CSS3 Content Columns
@mixin content-columns($columnCount, $columnGap: $gridGutterWidth) {
  -webkit-column-count: $columnCount;
     -moz-column-count: $columnCount;
          column-count: $columnCount;
  -webkit-column-gap: $columnGap;
     -moz-column-gap: $columnGap;
          column-gap: $columnGap;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
     -moz-hyphens: $mode;
      -ms-hyphens: $mode;
       -o-hyphens: $mode;
          hyphens: $mode;
}

.unselectable {
    -moz-user-select: -moz-none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -o-user-select: none;
    user-select: none;
   -ms-user-select: none;
}

.cover-background {
    background-repeat: no-repeat;
    background-position: center center;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}
.contain-background {
    background-repeat: no-repeat;
    -webkit-background-size: contain;
    -moz-background-size: contain;
    -o-background-size: contain;
    background-size: contain;
    background-color: #2E3546;
}
.centered {
    text-align: center;
    &.cta{
      i {
          font-size: 3em;
          color: $grayLight;
      }
    }
}
.subbut {
  margin: 24px auto;
}
// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
.clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

@mixin ArialBlack() {
  font-family: $sansFontFamily;
  font-weight: 700;
}

// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: $radius;
      -moz-border-radius-topleft: $radius;
          border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
      -moz-border-radius-topright: $radius;
          border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
      -moz-border-radius-bottomright: $radius;
          border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
      -moz-border-radius-bottomleft: $radius;
          border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-top-left-radius($radius);
}
@mixin border-right-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}
@mixin border-bottom-radius($radius) {
  @include border-bottom-right-radius($radius);
  @include border-bottom-left-radius($radius);
}
@mixin border-left-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}

// Drop shadows
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

// Block level inputs
.input-block-level {
  display: block;
  width: 100%;
  min-height: $inputHeight; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  @include box-sizing(border-box); // Makes inputs behave like true block-level elements
}

.darkenInset {
    &:after {
        content: "";
        box-shadow:inset 0 -42.5rem 42.5rem -21.25rem rgba(0,0,0,.5),inset 0 8.5rem 10.6rem -5.3rem rgba(0,0,0,.5);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: block;
    }
}

@mixin darken($opacity, $color) {
  &:before {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $color;
    opacity: $opacity;
    display: block;
  }
}
@mixin radialOverlay($inner-color: #555, $outer-color: #333) {
    background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
    background-image: radial-gradient(circle, $inner-color, $outer-color);
    background-repeat: no-repeat;
  }
@mixin baseOverlay($opacity) {
    &::before {
        @include border-radius($boxBorderRadius);
        display: block;
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,$opacity);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#000000', GradientType=0 );
        }
    &::after {
        @include border-radius($boxBorderRadius);
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: $black;
        opacity: .1;
        }
    }

@mixin heavy() {
    &::after {
      opacity: .74;
    }
}

@mixin tint($color) {
    &::after {
      background-color: $color;
    }
}

@mixin groverlay() {
    &::after {
        @include border-radius($boxBorderRadius);
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        height: 100%;
        background-color: $black;
        opacity: .40;
        }
    }


.alertOverlay {
    &::after {
        @include border-radius($boxBorderRadius);
        display: block;
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1050;
        background: rgba(0,0,0,.68);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#000000', GradientType=0 );
        }
    }
